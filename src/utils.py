import cv2
from PIL import Image
import json


def load_video_frames(video_path: str):
    cap = cv2.VideoCapture(video_path)
    frames = []

    if not cap.isOpened():
        print("Error: Could not open video.")
        return frames

    # Read frames until the video ends
    while True:
        ret, frame = cap.read()
        if not ret:
            break
        
        # Convert frame from BGR (OpenCV format) to RGB (PIL format)
        frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        
        # Convert the NumPy array to a PIL Image
        img = Image.fromarray(frame_rgb)
        frames.append(img)
    
    cap.release()
    return frames


def rename_json_objects(json_file_path: str, output_file_path: str = 'prompts_modified.json') -> None:
    """
    Creates a new JSON file that matches the naming of the objects in the prompt.json
    file with the naming of the objects generated by the object detector model.

    Parameters:
        json_file_path (str): The path to the JSON file with the prompts
        output_file_path (str): Name of the resulting JSON file

    Return:
        None
    """

    with open(json_file_path) as json_file:
        data = json.load(json_file)

    # Iterate over each prompt in the 'prompts' list
    for prompt in data['prompts']:
        # Check if 'people' key exists in the 'object' dictionary
        if 'people' in prompt['object']:
            # Change 'people' to 'person'
            prompt['object']['person'] = prompt['object'].pop('people')
        if 'backpacks' in prompt['object']:
            # Change 'backpacks' to 'backpack'
            prompt['object']['backpack'] = prompt['object'].pop('backpacks')
        if 'ball' in prompt['object']:
            # Change 'ball' to 'sports ball' as the model call it
            prompt['object']['sports ball'] = prompt['object'].pop('ball')
        if 'kitten' in prompt['object']:
            # Change 'kitten' to 'cat' as the model does not distinguish between them
            prompt['object']['cat'] = prompt['object'].pop('kitten')
        if 'kayak' in prompt['object']:
            # Change 'kayak' to 'boat' as the model does not distinguish between boats
            prompt['object']['boat'] = prompt['object'].pop('kayak')
        if 'cardinal' in prompt['object']:
            # Change 'cardinal' to 'bird' as the model does not distinguish between boats
            prompt['object']['bird'] = prompt['object'].pop('cardinal')

    # Save the modified JSON data back to the file
    with open(output_file_path, 'w') as json_file:
        json.dump(data, json_file, indent=4)
